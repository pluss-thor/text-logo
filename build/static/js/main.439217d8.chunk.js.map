{"version":3,"sources":["App.js","index.js"],"names":["App","props","checkFontSize","document","getElementById","clientWidth","state","width","clientHeight","height","newFontSize","fontSize","newState","lineHeight","Math","ceil","floor","setState","window","outerHeight","outerWidth","this","font","colour","text","letterSpacing","id","className","style","fontFamily","color","Component","defaultProps","ReactDOM","render","StrictMode","templateProps"],"mappings":"qOAIMA,G,wDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAkBRC,cAAgB,WACd,GACEC,SAASC,eAAe,QAAQC,YAAc,EAAKC,MAAMC,OACzDJ,SAASC,eAAe,QAAQI,aAAe,EAAKF,MAAMG,OAC1D,CACA,IAAMC,EAAc,EAAKJ,MAAMK,SAAW,EACpCC,EAAW,CACfD,SAAUD,EACVG,WACE,EAAKP,MAAMG,OACXK,KAAKC,KAAKD,KAAKE,MAAM,EAAKV,MAAMG,OAASC,GAAc,IAE3D,EAAKO,SAASL,KA5BhB,EAAKN,MAAQ,CACXK,SAAU,GACVE,WAAYK,OAAOC,YACnBV,OAAQS,OAAOC,YACfZ,MAAOW,OAAOE,YAPC,E,gEAYjBC,KAAKnB,kB,2CAILmB,KAAKnB,kB,+BAmBG,IAAD,EACuCmB,KAAKpB,MAA3CqB,EADD,EACCA,KAAMC,EADP,EACOA,OAAQC,EADf,EACeA,KAAMC,EADrB,EACqBA,cADrB,EAEyCJ,KAAKf,MAA7CC,EAFD,EAECA,MAAOE,EAFR,EAEQA,OAAQE,EAFhB,EAEgBA,SAAUE,EAF1B,EAE0BA,WAEjC,OACE,qBAAKa,GAAG,MAAMC,UAAU,MAAMC,MAAO,CAAErB,QAAOE,UAA9C,SACE,mBACEiB,GAAG,OACHE,MAAO,CACLC,WAAYP,EACZQ,MAAOP,EACPZ,WACAE,WAAW,GAAD,OAAKA,EAAL,MACVY,iBAPJ,SAUGD,U,GApDOO,cAkElB/B,EAAIgC,aAAe,CACjBV,KAAM,cACNC,OAAQ,UACRC,KAAM,2BACNC,cAAe,GAGFzB,QCzEfiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,eAASjB,OAAOkB,kBAElBjC,SAASC,eAAe,W","file":"static/js/main.439217d8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fontSize: 80,\n      lineHeight: window.outerHeight,\n      height: window.outerHeight,\n      width: window.outerWidth,\n    };\n  }\n\n  componentDidMount() {\n    this.checkFontSize();\n  }\n\n  componentDidUpdate() {\n    this.checkFontSize();\n  }\n\n  checkFontSize = () => {\n    if (\n      document.getElementById(\"text\").clientWidth > this.state.width ||\n      document.getElementById(\"text\").clientHeight > this.state.height\n    ) {\n      const newFontSize = this.state.fontSize - 2;\n      const newState = {\n        fontSize: newFontSize,\n        lineHeight:\n          this.state.height /\n          Math.ceil(Math.floor(this.state.height / newFontSize), 1),\n      };\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const { font, colour, text, letterSpacing } = this.props;\n    const { width, height, fontSize, lineHeight } = this.state;\n\n    return (\n      <div id=\"app\" className=\"App\" style={{ width, height }}>\n        <p\n          id=\"text\"\n          style={{\n            fontFamily: font,\n            color: colour,\n            fontSize,\n            lineHeight: `${lineHeight}px`,\n            letterSpacing,\n          }}\n        >\n          {text}\n        </p>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  font: PropTypes.string,\n  colour: PropTypes.string,\n  text: PropTypes.string,\n  letterSpacing: PropTypes.number,\n};\n\nApp.defaultProps = {\n  font: \"Grand Hotel\",\n  colour: \"#4a57b7\",\n  text: \"Community Software House\",\n  letterSpacing: 0,\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App {...window.templateProps} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}